{"filter":false,"title":"api.yaml","tooltip":"/order-app/api.yaml","undoManager":{"mark":22,"position":22,"stack":[[{"start":{"row":0,"column":0},"end":{"row":20,"column":0},"action":"insert","lines":["---","swagger: \"2.0\"","info:","  version: \"1.0\"","  title: \"order-app\"","basePath: \"/Dev\"","schemes:","- \"https\"","paths:","  /orders:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetOrders.Arn}/invocations","        passthroughBehavior: \"when_no_match\"",""],"id":1}],[{"start":{"row":20,"column":0},"end":{"row":20,"column":2},"action":"insert","lines":["  "],"id":2}],[{"start":{"row":20,"column":2},"end":{"row":20,"column":4},"action":"insert","lines":["  "],"id":3}],[{"start":{"row":20,"column":4},"end":{"row":38,"column":0},"action":"insert","lines":["post:","      consumes:","      - \"application/json\"","      produces:","      - \"application/json\"","      responses: {}","      x-amazon-apigateway-integration:","        type: \"aws_proxy\"","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostOrders.Arn}/invocations","        responses:","          default:","            statusCode: \"200\"","        passthroughBehavior: \"when_no_match\"","",""],"id":4}],[{"start":{"row":36,"column":44},"end":{"row":37,"column":0},"action":"insert","lines":["",""],"id":5},{"start":{"row":37,"column":0},"end":{"row":37,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":37,"column":6},"end":{"row":37,"column":8},"action":"remove","lines":["  "],"id":6},{"start":{"row":37,"column":4},"end":{"row":37,"column":6},"action":"remove","lines":["  "]}],[{"start":{"row":36,"column":44},"end":{"row":37,"column":0},"action":"insert","lines":["",""],"id":10},{"start":{"row":37,"column":0},"end":{"row":37,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":37,"column":6},"end":{"row":37,"column":8},"action":"remove","lines":["  "],"id":11},{"start":{"row":37,"column":4},"end":{"row":37,"column":6},"action":"remove","lines":["  "]}],[{"start":{"row":37,"column":4},"end":{"row":47,"column":44},"action":"insert","lines":["/orders/{orderId+}:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetSingleOrder.Arn}/invocations","        passthroughBehavior: \"when_no_match\""],"id":12}],[{"start":{"row":0,"column":0},"end":{"row":50,"column":0},"action":"remove","lines":["---","swagger: \"2.0\"","info:","  version: \"1.0\"","  title: \"order-app\"","basePath: \"/Dev\"","schemes:","- \"https\"","paths:","  /orders:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetOrders.Arn}/invocations","        passthroughBehavior: \"when_no_match\"","    post:","      consumes:","      - \"application/json\"","      produces:","      - \"application/json\"","      responses: {}","      x-amazon-apigateway-integration:","        type: \"aws_proxy\"","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostOrders.Arn}/invocations","        responses:","          default:","            statusCode: \"200\"","        passthroughBehavior: \"when_no_match\"","    /orders/{orderId+}:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetSingleOrder.Arn}/invocations","        passthroughBehavior: \"when_no_match\"","    ","",""],"id":13},{"start":{"row":0,"column":0},"end":{"row":48,"column":0},"action":"insert","lines":["---","swagger: \"2.0\"","info:","  version: \"1.0\"","  title: \"order-app\"","basePath: \"/Dev\"","schemes:","- \"https\"","paths:","  /orders:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetOrders.Arn}/invocations","        passthroughBehavior: \"when_no_match\"","    post:","      consumes:","      - \"application/json\"","      produces:","      - \"application/json\"","      responses: {}","      x-amazon-apigateway-integration:","        type: \"aws_proxy\"","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostOrders.Arn}/invocations","        responses:","          default:","            statusCode: \"200\"","        passthroughBehavior: \"when_no_match\"","  /orders/{orderId+}:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetSingleOrder.Arn}/invocations","        passthroughBehavior: \"when_no_match\"",""]}],[{"start":{"row":47,"column":44},"end":{"row":48,"column":0},"action":"insert","lines":["",""],"id":14},{"start":{"row":48,"column":0},"end":{"row":48,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":48,"column":6},"end":{"row":48,"column":8},"action":"remove","lines":["  "],"id":15},{"start":{"row":48,"column":4},"end":{"row":48,"column":6},"action":"remove","lines":["  "]}],[{"start":{"row":48,"column":4},"end":{"row":67,"column":25},"action":"insert","lines":["put:","      produces:","      - \"application/json\"","      parameters:","      - name: \"orderId\"","        in: \"path\"","        required: true","        type: \"string\"","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateOrder.Arn}/invocations","        responses:","          default:","            statusCode: \"200\"","        passthroughBehavior: \"when_no_match\"","        type: \"aws_proxy\""],"id":16}],[{"start":{"row":67,"column":25},"end":{"row":68,"column":0},"action":"insert","lines":["",""],"id":17},{"start":{"row":68,"column":0},"end":{"row":68,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":68,"column":6},"end":{"row":68,"column":8},"action":"remove","lines":["  "],"id":18},{"start":{"row":68,"column":4},"end":{"row":68,"column":6},"action":"remove","lines":["  "]}],[{"start":{"row":68,"column":4},"end":{"row":77,"column":44},"action":"insert","lines":["delete:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteOrder.Arn}/invocations","        passthroughBehavior: \"when_no_match\""],"id":19}],[{"start":{"row":0,"column":0},"end":{"row":78,"column":0},"action":"remove","lines":["---","swagger: \"2.0\"","info:","  version: \"1.0\"","  title: \"order-app\"","basePath: \"/Dev\"","schemes:","- \"https\"","paths:","  /orders:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetOrders.Arn}/invocations","        passthroughBehavior: \"when_no_match\"","    post:","      consumes:","      - \"application/json\"","      produces:","      - \"application/json\"","      responses: {}","      x-amazon-apigateway-integration:","        type: \"aws_proxy\"","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostOrders.Arn}/invocations","        responses:","          default:","            statusCode: \"200\"","        passthroughBehavior: \"when_no_match\"","  /orders/{orderId+}:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetSingleOrder.Arn}/invocations","        passthroughBehavior: \"when_no_match\"","    put:","      produces:","      - \"application/json\"","      parameters:","      - name: \"orderId\"","        in: \"path\"","        required: true","        type: \"string\"","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateOrder.Arn}/invocations","        responses:","          default:","            statusCode: \"200\"","        passthroughBehavior: \"when_no_match\"","        type: \"aws_proxy\"","    delete:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteOrder.Arn}/invocations","        passthroughBehavior: \"when_no_match\"",""],"id":20},{"start":{"row":0,"column":0},"end":{"row":85,"column":0},"action":"insert","lines":["---","swagger: \"2.0\"","info:","  version: \"1.0\"","  title: \"order-app\"","basePath: \"/Dev\"","schemes:","- \"https\"","paths:","  /orders:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetOrders.Arn}/invocations","        passthroughBehavior: \"when_no_match\"","    post:","      consumes:","      - \"application/json\"","      produces:","      - \"application/json\"","      responses:","        \"200\":","          description: \"200 response\"","      x-amazon-apigateway-integration:","        type: \"aws\"","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:sqs:path/${AWS::AccountId}/${OrderQueue.QueueName}","        responses:","          default:","            statusCode: \"200\"","        requestParameters:","          integration.request.header.Content-Type: \"'application/x-www-form-urlencoded'\"","        requestTemplates:","          application/json: \"Action=SendMessage&MessageBody={\\\"data\\\":$input.json('$')}\"","        passthroughBehavior: \"when_no_match\"","  /orders/{orderId+}:","    get:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetSingleOrder.Arn}/invocations","        passthroughBehavior: \"when_no_match\"","    put:","      produces:","      - \"application/json\"","      parameters:","      - name: \"orderId\"","        in: \"path\"","        required: true","        type: \"string\"","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpdateOrder.Arn}/invocations","        responses:","          default:","            statusCode: \"200\"","        passthroughBehavior: \"when_no_match\"","        type: \"aws_proxy\"","    delete:","      responses: {}","      x-amazon-apigateway-integration:","        credentials: ","          Fn::GetAtt: [ ApiGwExecutionRole, Arn ]","        type: \"aws_proxy\"","        httpMethod: \"POST\"","        uri:","          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteOrder.Arn}/invocations","        passthroughBehavior: \"when_no_match\"","",""]}],[{"start":{"row":83,"column":44},"end":{"row":84,"column":0},"action":"insert","lines":["",""],"id":29},{"start":{"row":84,"column":0},"end":{"row":84,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":84,"column":6},"end":{"row":84,"column":8},"action":"remove","lines":["  "],"id":30}],[{"start":{"row":84,"column":6},"end":{"row":86,"column":32},"action":"insert","lines":["security:","  - MyCognitoAuthorizer:","      - \"order-api/delete_order\""],"id":31}],[{"start":{"row":85,"column":0},"end":{"row":85,"column":2},"action":"insert","lines":["  "],"id":32},{"start":{"row":86,"column":0},"end":{"row":86,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":85,"column":0},"end":{"row":85,"column":2},"action":"insert","lines":["  "],"id":33},{"start":{"row":86,"column":0},"end":{"row":86,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":85,"column":0},"end":{"row":85,"column":2},"action":"insert","lines":["  "],"id":34},{"start":{"row":86,"column":0},"end":{"row":86,"column":2},"action":"insert","lines":["  "]}]]},"ace":{"folds":[],"scrolltop":751.2000000000008,"scrollleft":0,"selection":{"start":{"row":87,"column":0},"end":{"row":87,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":52,"state":"start","mode":"ace/mode/yaml"}},"timestamp":1692472518300,"hash":"05e76352644a575e16871ed74d61a7af5540890f"}