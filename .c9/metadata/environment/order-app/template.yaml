{"filter":false,"title":"template.yaml","tooltip":"/order-app/template.yaml","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":32,"column":8},"end":{"row":33,"column":0},"action":"insert","lines":["",""],"id":375},{"start":{"row":33,"column":0},"end":{"row":33,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":33,"column":6},"end":{"row":33,"column":8},"action":"remove","lines":["  "],"id":376}],[{"start":{"row":33,"column":4},"end":{"row":33,"column":6},"action":"remove","lines":["  "],"id":377},{"start":{"row":33,"column":2},"end":{"row":33,"column":4},"action":"remove","lines":["  "]}],[{"start":{"row":33,"column":2},"end":{"row":59,"column":0},"action":"insert","lines":["  GetOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/get-orders/","      Handler: app.getOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:GetItem","              - dynamodb:Query ","              - dynamodb:Scan","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"    ","",""],"id":378}],[{"start":{"row":32,"column":2},"end":{"row":32,"column":4},"action":"remove","lines":["  "],"id":379}],[{"start":{"row":32,"column":2},"end":{"row":32,"column":4},"action":"insert","lines":["  "],"id":380}],[{"start":{"row":32,"column":4},"end":{"row":32,"column":5},"action":"insert","lines":["#"],"id":381}],[{"start":{"row":32,"column":5},"end":{"row":32,"column":6},"action":"insert","lines":[" "],"id":382},{"start":{"row":32,"column":6},"end":{"row":32,"column":7},"action":"insert","lines":["G"]},{"start":{"row":32,"column":7},"end":{"row":32,"column":8},"action":"insert","lines":["e"]},{"start":{"row":32,"column":8},"end":{"row":32,"column":9},"action":"insert","lines":["t"]}],[{"start":{"row":32,"column":9},"end":{"row":32,"column":10},"action":"insert","lines":[" "],"id":383}],[{"start":{"row":32,"column":9},"end":{"row":32,"column":10},"action":"remove","lines":[" "],"id":384}],[{"start":{"row":32,"column":9},"end":{"row":32,"column":10},"action":"insert","lines":["O"],"id":385},{"start":{"row":32,"column":10},"end":{"row":32,"column":11},"action":"insert","lines":["r"]},{"start":{"row":32,"column":11},"end":{"row":32,"column":12},"action":"insert","lines":["d"]},{"start":{"row":32,"column":12},"end":{"row":32,"column":13},"action":"insert","lines":["e"]},{"start":{"row":32,"column":13},"end":{"row":32,"column":14},"action":"insert","lines":["r"]},{"start":{"row":32,"column":14},"end":{"row":32,"column":15},"action":"insert","lines":["s"]}],[{"start":{"row":32,"column":15},"end":{"row":32,"column":16},"action":"insert","lines":[" "],"id":386},{"start":{"row":32,"column":16},"end":{"row":32,"column":17},"action":"insert","lines":["f"]},{"start":{"row":32,"column":17},"end":{"row":32,"column":18},"action":"insert","lines":["u"]},{"start":{"row":32,"column":18},"end":{"row":32,"column":19},"action":"insert","lines":["n"]},{"start":{"row":32,"column":19},"end":{"row":32,"column":20},"action":"insert","lines":["c"]},{"start":{"row":32,"column":20},"end":{"row":32,"column":21},"action":"insert","lines":["t"]},{"start":{"row":32,"column":21},"end":{"row":32,"column":22},"action":"insert","lines":["i"]},{"start":{"row":32,"column":22},"end":{"row":32,"column":23},"action":"insert","lines":["o"]},{"start":{"row":32,"column":23},"end":{"row":32,"column":24},"action":"insert","lines":["n"]}],[{"start":{"row":32,"column":24},"end":{"row":32,"column":25},"action":"insert","lines":[" "],"id":387},{"start":{"row":32,"column":25},"end":{"row":32,"column":26},"action":"insert","lines":["l"]}],[{"start":{"row":32,"column":26},"end":{"row":32,"column":27},"action":"insert","lines":["a"],"id":388},{"start":{"row":32,"column":27},"end":{"row":32,"column":28},"action":"insert","lines":["m"]},{"start":{"row":32,"column":28},"end":{"row":32,"column":29},"action":"insert","lines":["b"]},{"start":{"row":32,"column":29},"end":{"row":32,"column":30},"action":"insert","lines":["d"]},{"start":{"row":32,"column":30},"end":{"row":32,"column":31},"action":"insert","lines":["a"]}],[{"start":{"row":66,"column":26},"end":{"row":67,"column":0},"action":"insert","lines":["",""],"id":389},{"start":{"row":67,"column":0},"end":{"row":67,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":67,"column":2},"end":{"row":67,"column":4},"action":"remove","lines":["  "],"id":390}],[{"start":{"row":67,"column":2},"end":{"row":67,"column":3},"action":"insert","lines":["#"],"id":391},{"start":{"row":67,"column":3},"end":{"row":67,"column":4},"action":"insert","lines":["L"]},{"start":{"row":67,"column":4},"end":{"row":67,"column":5},"action":"insert","lines":["a"]},{"start":{"row":67,"column":5},"end":{"row":67,"column":6},"action":"insert","lines":["m"]},{"start":{"row":67,"column":6},"end":{"row":67,"column":7},"action":"insert","lines":["b"]},{"start":{"row":67,"column":7},"end":{"row":67,"column":8},"action":"insert","lines":["d"]},{"start":{"row":67,"column":8},"end":{"row":67,"column":9},"action":"insert","lines":["a"]}],[{"start":{"row":67,"column":9},"end":{"row":67,"column":10},"action":"insert","lines":[" "],"id":392},{"start":{"row":67,"column":10},"end":{"row":67,"column":11},"action":"insert","lines":["O"]},{"start":{"row":67,"column":11},"end":{"row":67,"column":12},"action":"insert","lines":["u"]},{"start":{"row":67,"column":12},"end":{"row":67,"column":13},"action":"insert","lines":["t"]},{"start":{"row":67,"column":13},"end":{"row":67,"column":14},"action":"insert","lines":["p"]},{"start":{"row":67,"column":14},"end":{"row":67,"column":15},"action":"insert","lines":["u"]},{"start":{"row":67,"column":15},"end":{"row":67,"column":16},"action":"insert","lines":["t"]}],[{"start":{"row":67,"column":16},"end":{"row":68,"column":0},"action":"insert","lines":["",""],"id":393},{"start":{"row":68,"column":0},"end":{"row":68,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":68,"column":0},"end":{"row":68,"column":2},"action":"remove","lines":["  "],"id":394}],[{"start":{"row":68,"column":0},"end":{"row":71,"column":0},"action":"insert","lines":["  GetOrders:","    Description: \"GetOrders Lambda Function ARN\"","    Value: !GetAtt GetOrders.Arn",""],"id":395}],[{"start":{"row":57,"column":23},"end":{"row":58,"column":0},"action":"insert","lines":["",""],"id":396},{"start":{"row":58,"column":0},"end":{"row":58,"column":14},"action":"insert","lines":["              "]}],[{"start":{"row":58,"column":12},"end":{"row":58,"column":14},"action":"remove","lines":["  "],"id":397},{"start":{"row":58,"column":10},"end":{"row":58,"column":12},"action":"remove","lines":["  "]},{"start":{"row":58,"column":8},"end":{"row":58,"column":10},"action":"remove","lines":["  "]},{"start":{"row":58,"column":6},"end":{"row":58,"column":8},"action":"remove","lines":["  "]},{"start":{"row":58,"column":4},"end":{"row":58,"column":6},"action":"remove","lines":["  "]}],[{"start":{"row":58,"column":4},"end":{"row":58,"column":5},"action":"insert","lines":["#"],"id":398}],[{"start":{"row":58,"column":5},"end":{"row":58,"column":6},"action":"insert","lines":[" "],"id":399}],[{"start":{"row":58,"column":6},"end":{"row":58,"column":7},"action":"insert","lines":["A"],"id":400},{"start":{"row":58,"column":7},"end":{"row":58,"column":8},"action":"insert","lines":["P"]},{"start":{"row":58,"column":8},"end":{"row":58,"column":9},"action":"insert","lines":["I"]}],[{"start":{"row":58,"column":9},"end":{"row":58,"column":10},"action":"insert","lines":[" "],"id":401},{"start":{"row":58,"column":10},"end":{"row":58,"column":11},"action":"insert","lines":["G"]},{"start":{"row":58,"column":11},"end":{"row":58,"column":12},"action":"insert","lines":["a"]},{"start":{"row":58,"column":12},"end":{"row":58,"column":13},"action":"insert","lines":["t"]}],[{"start":{"row":58,"column":13},"end":{"row":58,"column":14},"action":"insert","lines":["e"],"id":402},{"start":{"row":58,"column":14},"end":{"row":58,"column":15},"action":"insert","lines":["w"]},{"start":{"row":58,"column":15},"end":{"row":58,"column":16},"action":"insert","lines":["a"]},{"start":{"row":58,"column":16},"end":{"row":58,"column":17},"action":"insert","lines":["y"]},{"start":{"row":58,"column":17},"end":{"row":58,"column":18},"action":"insert","lines":["s"]}],[{"start":{"row":58,"column":18},"end":{"row":59,"column":0},"action":"insert","lines":["",""],"id":403},{"start":{"row":59,"column":0},"end":{"row":59,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":59,"column":2},"end":{"row":59,"column":4},"action":"remove","lines":["  "],"id":404}],[{"start":{"row":59,"column":2},"end":{"row":104,"column":0},"action":"insert","lines":["  OrderApi:","    Type: AWS::Serverless::Api","    Properties:","      StageName: Dev","      Cors:","        AllowMethods: \"'POST, GET, UPDATE, DELETE'\"","        AllowHeaders: \"'X-Forwarded-For'\"","        AllowOrigin: \"'*'\"","        MaxAge: \"'600'\"","      DefinitionBody:","        'Fn::Transform':","          Name: 'AWS::Include'","          Parameters:","            Location: './api.yaml'","","  ApiGwExecutionRole: ","    Type: \"AWS::IAM::Role\"","    Properties: ","      AssumeRolePolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          - ","            Effect: \"Allow\"","            Principal: ","              Service: ","                - \"apigateway.amazonaws.com\"","                - \"lambda.amazonaws.com\"","            Action: ","              - \"sts:AssumeRole\"","      Path: \"/\"","","  ApiGwExecutionPolicy: ","    Type: \"AWS::IAM::Policy\"","    Properties: ","      PolicyName: \"apigw-execution-policy\"","      PolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          Action:","            - lambda:*","          Effect: Allow","          Resource:","            - !GetAtt GetOrders.Arn","      Roles: ","        - Ref: \"ApiGwExecutionRole\"",""],"id":405}],[{"start":{"row":60,"column":0},"end":{"row":60,"column":2},"action":"insert","lines":["  "],"id":406},{"start":{"row":61,"column":0},"end":{"row":61,"column":2},"action":"insert","lines":["  "]},{"start":{"row":62,"column":0},"end":{"row":62,"column":2},"action":"insert","lines":["  "]},{"start":{"row":63,"column":0},"end":{"row":63,"column":2},"action":"insert","lines":["  "]},{"start":{"row":64,"column":0},"end":{"row":64,"column":2},"action":"insert","lines":["  "]},{"start":{"row":65,"column":0},"end":{"row":65,"column":2},"action":"insert","lines":["  "]},{"start":{"row":66,"column":0},"end":{"row":66,"column":2},"action":"insert","lines":["  "]},{"start":{"row":67,"column":0},"end":{"row":67,"column":2},"action":"insert","lines":["  "]},{"start":{"row":68,"column":0},"end":{"row":68,"column":2},"action":"insert","lines":["  "]},{"start":{"row":69,"column":0},"end":{"row":69,"column":2},"action":"insert","lines":["  "]},{"start":{"row":70,"column":0},"end":{"row":70,"column":2},"action":"insert","lines":["  "]},{"start":{"row":71,"column":0},"end":{"row":71,"column":2},"action":"insert","lines":["  "]},{"start":{"row":72,"column":0},"end":{"row":72,"column":2},"action":"insert","lines":["  "]},{"start":{"row":73,"column":0},"end":{"row":73,"column":2},"action":"insert","lines":["  "]},{"start":{"row":74,"column":0},"end":{"row":74,"column":2},"action":"insert","lines":["  "]},{"start":{"row":75,"column":0},"end":{"row":75,"column":2},"action":"insert","lines":["  "]},{"start":{"row":76,"column":0},"end":{"row":76,"column":2},"action":"insert","lines":["  "]},{"start":{"row":77,"column":0},"end":{"row":77,"column":2},"action":"insert","lines":["  "]},{"start":{"row":78,"column":0},"end":{"row":78,"column":2},"action":"insert","lines":["  "]},{"start":{"row":79,"column":0},"end":{"row":79,"column":2},"action":"insert","lines":["  "]},{"start":{"row":80,"column":0},"end":{"row":80,"column":2},"action":"insert","lines":["  "]},{"start":{"row":81,"column":0},"end":{"row":81,"column":2},"action":"insert","lines":["  "]},{"start":{"row":82,"column":0},"end":{"row":82,"column":2},"action":"insert","lines":["  "]},{"start":{"row":83,"column":0},"end":{"row":83,"column":2},"action":"insert","lines":["  "]},{"start":{"row":84,"column":0},"end":{"row":84,"column":2},"action":"insert","lines":["  "]},{"start":{"row":85,"column":0},"end":{"row":85,"column":2},"action":"insert","lines":["  "]},{"start":{"row":86,"column":0},"end":{"row":86,"column":2},"action":"insert","lines":["  "]},{"start":{"row":87,"column":0},"end":{"row":87,"column":2},"action":"insert","lines":["  "]},{"start":{"row":88,"column":0},"end":{"row":88,"column":2},"action":"insert","lines":["  "]},{"start":{"row":89,"column":0},"end":{"row":89,"column":2},"action":"insert","lines":["  "]},{"start":{"row":90,"column":0},"end":{"row":90,"column":2},"action":"insert","lines":["  "]},{"start":{"row":91,"column":0},"end":{"row":91,"column":2},"action":"insert","lines":["  "]},{"start":{"row":92,"column":0},"end":{"row":92,"column":2},"action":"insert","lines":["  "]},{"start":{"row":93,"column":0},"end":{"row":93,"column":2},"action":"insert","lines":["  "]},{"start":{"row":94,"column":0},"end":{"row":94,"column":2},"action":"insert","lines":["  "]},{"start":{"row":95,"column":0},"end":{"row":95,"column":2},"action":"insert","lines":["  "]},{"start":{"row":96,"column":0},"end":{"row":96,"column":2},"action":"insert","lines":["  "]},{"start":{"row":97,"column":0},"end":{"row":97,"column":2},"action":"insert","lines":["  "]},{"start":{"row":98,"column":0},"end":{"row":98,"column":2},"action":"insert","lines":["  "]},{"start":{"row":99,"column":0},"end":{"row":99,"column":2},"action":"insert","lines":["  "]},{"start":{"row":100,"column":0},"end":{"row":100,"column":2},"action":"insert","lines":["  "]},{"start":{"row":101,"column":0},"end":{"row":101,"column":2},"action":"insert","lines":["  "]},{"start":{"row":102,"column":0},"end":{"row":102,"column":2},"action":"insert","lines":["  "]},{"start":{"row":103,"column":0},"end":{"row":103,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":117,"column":32},"end":{"row":118,"column":0},"action":"insert","lines":["",""],"id":407},{"start":{"row":118,"column":0},"end":{"row":118,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":118,"column":2},"end":{"row":118,"column":4},"action":"remove","lines":["  "],"id":408}],[{"start":{"row":118,"column":2},"end":{"row":118,"column":3},"action":"insert","lines":["#"],"id":409}],[{"start":{"row":118,"column":3},"end":{"row":118,"column":4},"action":"insert","lines":[" "],"id":410},{"start":{"row":118,"column":4},"end":{"row":118,"column":5},"action":"insert","lines":["E"]},{"start":{"row":118,"column":5},"end":{"row":118,"column":6},"action":"insert","lines":["n"]},{"start":{"row":118,"column":6},"end":{"row":118,"column":7},"action":"insert","lines":["d"]},{"start":{"row":118,"column":7},"end":{"row":118,"column":8},"action":"insert","lines":["p"]},{"start":{"row":118,"column":8},"end":{"row":118,"column":9},"action":"insert","lines":["o"]},{"start":{"row":118,"column":9},"end":{"row":118,"column":10},"action":"insert","lines":["i"]},{"start":{"row":118,"column":10},"end":{"row":118,"column":11},"action":"insert","lines":["n"]}],[{"start":{"row":118,"column":11},"end":{"row":118,"column":12},"action":"insert","lines":["t"],"id":411}],[{"start":{"row":118,"column":12},"end":{"row":118,"column":13},"action":"insert","lines":[" "],"id":412},{"start":{"row":118,"column":13},"end":{"row":118,"column":14},"action":"insert","lines":["O"]},{"start":{"row":118,"column":14},"end":{"row":118,"column":15},"action":"insert","lines":["u"]},{"start":{"row":118,"column":15},"end":{"row":118,"column":16},"action":"insert","lines":["t"]},{"start":{"row":118,"column":16},"end":{"row":118,"column":17},"action":"insert","lines":["p"]},{"start":{"row":118,"column":17},"end":{"row":118,"column":18},"action":"insert","lines":["u"]},{"start":{"row":118,"column":18},"end":{"row":118,"column":19},"action":"insert","lines":["t"]}],[{"start":{"row":118,"column":19},"end":{"row":119,"column":0},"action":"insert","lines":["",""],"id":413},{"start":{"row":119,"column":0},"end":{"row":119,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":119,"column":0},"end":{"row":119,"column":2},"action":"remove","lines":["  "],"id":414}],[{"start":{"row":119,"column":0},"end":{"row":122,"column":0},"action":"insert","lines":["  OrderApiEndpoint:","    Description: \"API Gateway endpoint URL for Dev stage for Order Get function\"","    Value: !Sub \"https://${OrderApi}.execute-api.${AWS::Region}.amazonaws.com/Dev/orders/\"",""],"id":415}],[{"start":{"row":0,"column":0},"end":{"row":126,"column":0},"action":"remove","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  order-app","","  Sample SAM Template for order-app","  ","# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst","Globals:","  Function:","    Timeout: 3","    MemorySize: 128","","Resources:","  # DynamoDB Table for Order Database","  OrderTable:","    Type: AWS::DynamoDB::Table","    Properties: ","      TableName: order-table","      AttributeDefinitions: ","        - AttributeName: user_id","          AttributeType: S","        - AttributeName: id","          AttributeType: S","      KeySchema: ","        - AttributeName: user_id","          KeyType: HASH","        - AttributeName: id","          KeyType: RANGE","      ProvisionedThroughput: ","        ReadCapacityUnits: 5","        WriteCapacityUnits: 5 ","    # GetOrders function lambda    ","    GetOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/get-orders/","      Handler: app.getOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:GetItem","              - dynamodb:Query ","              - dynamodb:Scan","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"    ","    # API Gateways","    OrderApi:","      Type: AWS::Serverless::Api","      Properties:","        StageName: Dev","        Cors:","          AllowMethods: \"'POST, GET, UPDATE, DELETE'\"","          AllowHeaders: \"'X-Forwarded-For'\"","          AllowOrigin: \"'*'\"","          MaxAge: \"'600'\"","        DefinitionBody:","          'Fn::Transform':","            Name: 'AWS::Include'","            Parameters:","              Location: './api.yaml'","  ","    ApiGwExecutionRole: ","      Type: \"AWS::IAM::Role\"","      Properties: ","        AssumeRolePolicyDocument: ","          Version: \"2012-10-17\"","          Statement: ","            - ","              Effect: \"Allow\"","              Principal: ","                Service: ","                  - \"apigateway.amazonaws.com\"","                  - \"lambda.amazonaws.com\"","              Action: ","                - \"sts:AssumeRole\"","        Path: \"/\"","  ","    ApiGwExecutionPolicy: ","      Type: \"AWS::IAM::Policy\"","      Properties: ","        PolicyName: \"apigw-execution-policy\"","        PolicyDocument: ","          Version: \"2012-10-17\"","          Statement: ","            Action:","              - lambda:*","            Effect: Allow","            Resource:","              - !GetAtt GetOrders.Arn","        Roles: ","          - Ref: \"ApiGwExecutionRole\"","","","","","","Outputs:","  # DB cloudformation output","  DynamoDBTableName:","    Description: \"DynamoDB Table Name\"","    Value: !Ref OrderTable","  #Lambda Output","  GetOrders:","    Description: \"GetOrders Lambda Function ARN\"","    Value: !GetAtt GetOrders.Arn","  # Endpoint Output","  OrderApiEndpoint:","    Description: \"API Gateway endpoint URL for Dev stage for Order Get function\"","    Value: !Sub \"https://${OrderApi}.execute-api.${AWS::Region}.amazonaws.com/Dev/orders/\"","","","  ","  ",""],"id":416},{"start":{"row":0,"column":0},"end":{"row":61,"column":0},"action":"insert","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  order-app","","  Sample SAM Template for order-app","  ","Globals:","  Function:","    Timeout: 3","","Resources:","  OrderTable:","    Type: AWS::DynamoDB::Table","    Properties: ","      TableName: order-table","      AttributeDefinitions: ","        - AttributeName: user_id","          AttributeType: S","        - AttributeName: id","          AttributeType: S","      KeySchema: ","        - AttributeName: user_id","          KeyType: HASH","        - AttributeName: id","          KeyType: RANGE","      ProvisionedThroughput: ","        ReadCapacityUnits: 5","        WriteCapacityUnits: 5","  GetOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/get-orders/","      Handler: app.getOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:GetItem","              - dynamodb:Query ","              - dynamodb:Scan","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"    ","Outputs:","  DynamoDBTableName:","    Description: \"DynamoDB Table Name\"","    Value: !Ref OrderTable","  GetOrders:","    Description: \"GetOrders Lambda Function ARN\"","    Value: !GetAtt GetOrders.Arn",""]}],[{"start":{"row":0,"column":0},"end":{"row":61,"column":0},"action":"remove","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  order-app","","  Sample SAM Template for order-app","  ","Globals:","  Function:","    Timeout: 3","","Resources:","  OrderTable:","    Type: AWS::DynamoDB::Table","    Properties: ","      TableName: order-table","      AttributeDefinitions: ","        - AttributeName: user_id","          AttributeType: S","        - AttributeName: id","          AttributeType: S","      KeySchema: ","        - AttributeName: user_id","          KeyType: HASH","        - AttributeName: id","          KeyType: RANGE","      ProvisionedThroughput: ","        ReadCapacityUnits: 5","        WriteCapacityUnits: 5","  GetOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/get-orders/","      Handler: app.getOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:GetItem","              - dynamodb:Query ","              - dynamodb:Scan","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"    ","Outputs:","  DynamoDBTableName:","    Description: \"DynamoDB Table Name\"","    Value: !Ref OrderTable","  GetOrders:","    Description: \"GetOrders Lambda Function ARN\"","    Value: !GetAtt GetOrders.Arn",""],"id":417},{"start":{"row":0,"column":0},"end":{"row":112,"column":0},"action":"insert","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  order-app","","  Sample SAM Template for order-app","  ","Globals:","  Function:","    Timeout: 3","","Resources:","  OrderTable:","    Type: AWS::DynamoDB::Table","    Properties: ","      TableName: order-table","      AttributeDefinitions: ","        - AttributeName: user_id","          AttributeType: S","        - AttributeName: id","          AttributeType: S","      KeySchema: ","        - AttributeName: user_id","          KeyType: HASH","        - AttributeName: id","          KeyType: RANGE","      ProvisionedThroughput: ","        ReadCapacityUnits: 5","        WriteCapacityUnits: 5","","  GetOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/get-orders/","      Handler: app.getOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:GetItem","              - dynamodb:Query ","              - dynamodb:Scan","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"    ","  OrderApi:","    Type: AWS::Serverless::Api","    Properties:","      StageName: Dev","      Cors:","        AllowMethods: \"'POST, GET, UPDATE, DELETE'\"","        AllowHeaders: \"'X-Forwarded-For'\"","        AllowOrigin: \"'*'\"","        MaxAge: \"'600'\"","      DefinitionBody:","        'Fn::Transform':","          Name: 'AWS::Include'","          Parameters:","            Location: './api.yaml'","","  ApiGwExecutionRole: ","    Type: \"AWS::IAM::Role\"","    Properties: ","      AssumeRolePolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          - ","            Effect: \"Allow\"","            Principal: ","              Service: ","                - \"apigateway.amazonaws.com\"","                - \"lambda.amazonaws.com\"","            Action: ","              - \"sts:AssumeRole\"","      Path: \"/\"","","  ApiGwExecutionPolicy: ","    Type: \"AWS::IAM::Policy\"","    Properties: ","      PolicyName: \"apigw-execution-policy\"","      PolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          Action:","            - lambda:*","          Effect: Allow","          Resource:","            - !GetAtt GetOrders.Arn","      Roles: ","        - Ref: \"ApiGwExecutionRole\"","","Outputs:","  DynamoDBTableName:","    Description: \"DynamoDB Table Name\"","    Value: !Ref OrderTable","  GetOrders:","    Description: \"GetOrders Lambda Function ARN\"","    Value: !GetAtt GetOrders.Arn","  OrderApiEndpoint:","    Description: \"API Gateway endpoint URL for Dev stage for Order Get function\"","    Value: !Sub \"https://${OrderApi}.execute-api.${AWS::Region}.amazonaws.com/Dev/orders/\"","",""]}],[{"start":{"row":0,"column":0},"end":{"row":112,"column":0},"action":"remove","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  order-app","","  Sample SAM Template for order-app","  ","Globals:","  Function:","    Timeout: 3","","Resources:","  OrderTable:","    Type: AWS::DynamoDB::Table","    Properties: ","      TableName: order-table","      AttributeDefinitions: ","        - AttributeName: user_id","          AttributeType: S","        - AttributeName: id","          AttributeType: S","      KeySchema: ","        - AttributeName: user_id","          KeyType: HASH","        - AttributeName: id","          KeyType: RANGE","      ProvisionedThroughput: ","        ReadCapacityUnits: 5","        WriteCapacityUnits: 5","","  GetOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/get-orders/","      Handler: app.getOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:GetItem","              - dynamodb:Query ","              - dynamodb:Scan","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"    ","  OrderApi:","    Type: AWS::Serverless::Api","    Properties:","      StageName: Dev","      Cors:","        AllowMethods: \"'POST, GET, UPDATE, DELETE'\"","        AllowHeaders: \"'X-Forwarded-For'\"","        AllowOrigin: \"'*'\"","        MaxAge: \"'600'\"","      DefinitionBody:","        'Fn::Transform':","          Name: 'AWS::Include'","          Parameters:","            Location: './api.yaml'","","  ApiGwExecutionRole: ","    Type: \"AWS::IAM::Role\"","    Properties: ","      AssumeRolePolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          - ","            Effect: \"Allow\"","            Principal: ","              Service: ","                - \"apigateway.amazonaws.com\"","                - \"lambda.amazonaws.com\"","            Action: ","              - \"sts:AssumeRole\"","      Path: \"/\"","","  ApiGwExecutionPolicy: ","    Type: \"AWS::IAM::Policy\"","    Properties: ","      PolicyName: \"apigw-execution-policy\"","      PolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          Action:","            - lambda:*","          Effect: Allow","          Resource:","            - !GetAtt GetOrders.Arn","      Roles: ","        - Ref: \"ApiGwExecutionRole\"","","Outputs:","  DynamoDBTableName:","    Description: \"DynamoDB Table Name\"","    Value: !Ref OrderTable","  GetOrders:","    Description: \"GetOrders Lambda Function ARN\"","    Value: !GetAtt GetOrders.Arn","  OrderApiEndpoint:","    Description: \"API Gateway endpoint URL for Dev stage for Order Get function\"","    Value: !Sub \"https://${OrderApi}.execute-api.${AWS::Region}.amazonaws.com/Dev/orders/\"","",""],"id":418},{"start":{"row":0,"column":0},"end":{"row":137,"column":0},"action":"insert","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  order-app","","  Sample SAM Template for order-app","  ","Globals:","  Function:","    Timeout: 3","","Resources:","  OrderTable:","    Type: AWS::DynamoDB::Table","    Properties: ","      TableName: order-table","      AttributeDefinitions: ","        - AttributeName: user_id","          AttributeType: S","        - AttributeName: id","          AttributeType: S","      KeySchema: ","        - AttributeName: user_id","          KeyType: HASH","        - AttributeName: id","          KeyType: RANGE","      ProvisionedThroughput: ","        ReadCapacityUnits: 5","        WriteCapacityUnits: 5","  GetOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/get-orders/","      Handler: app.getOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:GetItem","              - dynamodb:Query ","              - dynamodb:Scan","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\" ","  PostOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/post-orders/","      Handler: app.postOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:PutItem","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"    ","  OrderApi:","    Type: AWS::Serverless::Api","    Properties:","      StageName: Dev","      Cors:","        AllowMethods: \"'POST, GET, UPDATE, DELETE'\"","        AllowHeaders: \"'X-Forwarded-For'\"","        AllowOrigin: \"'*'\"","        MaxAge: \"'600'\"","      DefinitionBody:","        'Fn::Transform':","          Name: 'AWS::Include'","          Parameters:","            Location: './api.yaml'","","  ApiGwExecutionRole: ","    Type: \"AWS::IAM::Role\"","    Properties: ","      AssumeRolePolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          - ","            Effect: \"Allow\"","            Principal: ","              Service: ","                - \"apigateway.amazonaws.com\"","                - \"lambda.amazonaws.com\"","            Action: ","              - \"sts:AssumeRole\"","      Path: \"/\"","","  ApiGwExecutionPolicy: ","    Type: \"AWS::IAM::Policy\"","    Properties: ","      PolicyName: \"apigw-execution-policy\"","      PolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          Action:","            - lambda:*","          Effect: Allow","          Resource:","            - !GetAtt GetOrders.Arn","      Roles: ","        - Ref: \"ApiGwExecutionRole\"","","Outputs:","  DynamoDBTableName:","    Description: \"DynamoDB Table Name\"","    Value: !Ref OrderTable","  GetOrders:","    Description: \"GetOrders Lambda Function ARN\"","    Value: !GetAtt GetOrders.Arn","  OrderApiEndpoint:","    Description: \"API Gateway endpoint URL for Dev stage for Order Get function\"","    Value: !Sub \"https://${OrderApi}.execute-api.${AWS::Region}.amazonaws.com/Dev/orders/\"","  PostOrders:","    Description: \"PostOrders Lambda Function ARN\"","    Value: !GetAtt PostOrders.Arn","",""]}],[{"start":{"row":119,"column":35},"end":{"row":120,"column":0},"action":"insert","lines":["",""],"id":419},{"start":{"row":120,"column":0},"end":{"row":120,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":120,"column":12},"end":{"row":121,"column":0},"action":"insert","lines":["            - !GetAtt PostOrders.Arn",""],"id":420}],[{"start":{"row":120,"column":13},"end":{"row":120,"column":23},"action":"remove","lines":["          "],"id":421},{"start":{"row":120,"column":12},"end":{"row":120,"column":13},"action":"remove","lines":[" "]}],[{"start":{"row":120,"column":12},"end":{"row":120,"column":13},"action":"remove","lines":[" "],"id":422}],[{"start":{"row":0,"column":0},"end":{"row":139,"column":0},"action":"remove","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  order-app","","  Sample SAM Template for order-app","  ","Globals:","  Function:","    Timeout: 3","","Resources:","  OrderTable:","    Type: AWS::DynamoDB::Table","    Properties: ","      TableName: order-table","      AttributeDefinitions: ","        - AttributeName: user_id","          AttributeType: S","        - AttributeName: id","          AttributeType: S","      KeySchema: ","        - AttributeName: user_id","          KeyType: HASH","        - AttributeName: id","          KeyType: RANGE","      ProvisionedThroughput: ","        ReadCapacityUnits: 5","        WriteCapacityUnits: 5","  GetOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/get-orders/","      Handler: app.getOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:GetItem","              - dynamodb:Query ","              - dynamodb:Scan","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\" ","  PostOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/post-orders/","      Handler: app.postOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:PutItem","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"    ","  OrderApi:","    Type: AWS::Serverless::Api","    Properties:","      StageName: Dev","      Cors:","        AllowMethods: \"'POST, GET, UPDATE, DELETE'\"","        AllowHeaders: \"'X-Forwarded-For'\"","        AllowOrigin: \"'*'\"","        MaxAge: \"'600'\"","      DefinitionBody:","        'Fn::Transform':","          Name: 'AWS::Include'","          Parameters:","            Location: './api.yaml'","","  ApiGwExecutionRole: ","    Type: \"AWS::IAM::Role\"","    Properties: ","      AssumeRolePolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          - ","            Effect: \"Allow\"","            Principal: ","              Service: ","                - \"apigateway.amazonaws.com\"","                - \"lambda.amazonaws.com\"","            Action: ","              - \"sts:AssumeRole\"","      Path: \"/\"","","  ApiGwExecutionPolicy: ","    Type: \"AWS::IAM::Policy\"","    Properties: ","      PolicyName: \"apigw-execution-policy\"","      PolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          Action:","            - lambda:*","          Effect: Allow","          Resource:","            - !GetAtt GetOrders.Arn","            - !GetAtt PostOrders.Arn","","      Roles: ","        - Ref: \"ApiGwExecutionRole\"","","Outputs:","  DynamoDBTableName:","    Description: \"DynamoDB Table Name\"","    Value: !Ref OrderTable","  GetOrders:","    Description: \"GetOrders Lambda Function ARN\"","    Value: !GetAtt GetOrders.Arn","  OrderApiEndpoint:","    Description: \"API Gateway endpoint URL for Dev stage for Order Get function\"","    Value: !Sub \"https://${OrderApi}.execute-api.${AWS::Region}.amazonaws.com/Dev/orders/\"","  PostOrders:","    Description: \"PostOrders Lambda Function ARN\"","    Value: !GetAtt PostOrders.Arn","",""],"id":423},{"start":{"row":0,"column":0},"end":{"row":164,"column":0},"action":"insert","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  order-app","","  Sample SAM Template for order-app","  ","Globals:","  Function:","    Timeout: 3","","Resources:","  OrderTable:","    Type: AWS::DynamoDB::Table","    Properties: ","      TableName: order-table","      AttributeDefinitions: ","        - AttributeName: user_id","          AttributeType: S","        - AttributeName: id","          AttributeType: S","      KeySchema: ","        - AttributeName: user_id","          KeyType: HASH","        - AttributeName: id","          KeyType: RANGE","      ProvisionedThroughput: ","        ReadCapacityUnits: 5","        WriteCapacityUnits: 5","  GetOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/get-orders/","      Handler: app.getOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:GetItem","              - dynamodb:Query ","              - dynamodb:Scan","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\" ","  PostOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/post-orders/","      Handler: app.postOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:PutItem","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"  ","  GetSingleOrder:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/get-single-order/","      Handler: app.getOrderById","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:GetItem","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"","  OrderApi:","    Type: AWS::Serverless::Api","    Properties:","      StageName: Dev","      Cors:","        AllowMethods: \"'POST, GET, UPDATE, DELETE'\"","        AllowHeaders: \"'X-Forwarded-For'\"","        AllowOrigin: \"'*'\"","        MaxAge: \"'600'\"","      DefinitionBody:","        'Fn::Transform':","          Name: 'AWS::Include'","          Parameters:","            Location: './api.yaml'","","  ApiGwExecutionRole: ","    Type: \"AWS::IAM::Role\"","    Properties: ","      AssumeRolePolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          - ","            Effect: \"Allow\"","            Principal: ","              Service: ","                - \"apigateway.amazonaws.com\"","                - \"lambda.amazonaws.com\"","            Action: ","              - \"sts:AssumeRole\"","      Path: \"/\"","","  ApiGwExecutionPolicy: ","    Type: \"AWS::IAM::Policy\"","    Properties: ","      PolicyName: \"apigw-execution-policy\"","      PolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          Action:","            - lambda:*","          Effect: Allow","          Resource:","            - !GetAtt GetOrders.Arn","            - !GetAtt PostOrders.Arn","      Roles: ","        - Ref: \"ApiGwExecutionRole\"","","Outputs:","  DynamoDBTableName:","    Description: \"DynamoDB Table Name\"","    Value: !Ref OrderTable","  GetOrders:","    Description: \"GetOrders Lambda Function ARN\"","    Value: !GetAtt GetOrders.Arn","  OrderApiEndpoint:","    Description: \"API Gateway endpoint URL for Dev stage for Order Get function\"","    Value: !Sub \"https://${OrderApi}.execute-api.${AWS::Region}.amazonaws.com/Dev/orders/\"","  PostOrders:","    Description: \"PostOrders Lambda Function ARN\"","    Value: !GetAtt PostOrders.Arn","  GetSingleOrder:","    Description: \"GetSingleOrder Lambda Function ARN\"","    Value: !GetAtt GetSingleOrder.Arn","",""]}],[{"start":{"row":143,"column":36},"end":{"row":144,"column":0},"action":"insert","lines":["",""],"id":424},{"start":{"row":144,"column":0},"end":{"row":144,"column":12},"action":"insert","lines":["            "]},{"start":{"row":144,"column":12},"end":{"row":144,"column":13},"action":"insert","lines":["-"]}],[{"start":{"row":144,"column":13},"end":{"row":144,"column":14},"action":"insert","lines":[" "],"id":425}],[{"start":{"row":144,"column":14},"end":{"row":144,"column":42},"action":"insert","lines":["- !GetAtt GetSingleOrder.Arn"],"id":426}],[{"start":{"row":144,"column":15},"end":{"row":144,"column":16},"action":"remove","lines":[" "],"id":427},{"start":{"row":144,"column":14},"end":{"row":144,"column":15},"action":"remove","lines":["-"]}],[{"start":{"row":0,"column":0},"end":{"row":165,"column":0},"action":"remove","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  order-app","","  Sample SAM Template for order-app","  ","Globals:","  Function:","    Timeout: 3","","Resources:","  OrderTable:","    Type: AWS::DynamoDB::Table","    Properties: ","      TableName: order-table","      AttributeDefinitions: ","        - AttributeName: user_id","          AttributeType: S","        - AttributeName: id","          AttributeType: S","      KeySchema: ","        - AttributeName: user_id","          KeyType: HASH","        - AttributeName: id","          KeyType: RANGE","      ProvisionedThroughput: ","        ReadCapacityUnits: 5","        WriteCapacityUnits: 5","  GetOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/get-orders/","      Handler: app.getOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:GetItem","              - dynamodb:Query ","              - dynamodb:Scan","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\" ","  PostOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/post-orders/","      Handler: app.postOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:PutItem","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"  ","  GetSingleOrder:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/get-single-order/","      Handler: app.getOrderById","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:GetItem","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"","  OrderApi:","    Type: AWS::Serverless::Api","    Properties:","      StageName: Dev","      Cors:","        AllowMethods: \"'POST, GET, UPDATE, DELETE'\"","        AllowHeaders: \"'X-Forwarded-For'\"","        AllowOrigin: \"'*'\"","        MaxAge: \"'600'\"","      DefinitionBody:","        'Fn::Transform':","          Name: 'AWS::Include'","          Parameters:","            Location: './api.yaml'","","  ApiGwExecutionRole: ","    Type: \"AWS::IAM::Role\"","    Properties: ","      AssumeRolePolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          - ","            Effect: \"Allow\"","            Principal: ","              Service: ","                - \"apigateway.amazonaws.com\"","                - \"lambda.amazonaws.com\"","            Action: ","              - \"sts:AssumeRole\"","      Path: \"/\"","","  ApiGwExecutionPolicy: ","    Type: \"AWS::IAM::Policy\"","    Properties: ","      PolicyName: \"apigw-execution-policy\"","      PolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          Action:","            - lambda:*","          Effect: Allow","          Resource:","            - !GetAtt GetOrders.Arn","            - !GetAtt PostOrders.Arn","            - !GetAtt GetSingleOrder.Arn","      Roles: ","        - Ref: \"ApiGwExecutionRole\"","","Outputs:","  DynamoDBTableName:","    Description: \"DynamoDB Table Name\"","    Value: !Ref OrderTable","  GetOrders:","    Description: \"GetOrders Lambda Function ARN\"","    Value: !GetAtt GetOrders.Arn","  OrderApiEndpoint:","    Description: \"API Gateway endpoint URL for Dev stage for Order Get function\"","    Value: !Sub \"https://${OrderApi}.execute-api.${AWS::Region}.amazonaws.com/Dev/orders/\"","  PostOrders:","    Description: \"PostOrders Lambda Function ARN\"","    Value: !GetAtt PostOrders.Arn","  GetSingleOrder:","    Description: \"GetSingleOrder Lambda Function ARN\"","    Value: !GetAtt GetSingleOrder.Arn","",""],"id":428},{"start":{"row":0,"column":0},"end":{"row":190,"column":0},"action":"insert","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  order-app","","  Sample SAM Template for order-app","  ","Globals:","  Function:","    Timeout: 3","","Resources:","  OrderTable:","    Type: AWS::DynamoDB::Table","    Properties: ","      TableName: order-table","      AttributeDefinitions: ","        - AttributeName: user_id","          AttributeType: S","        - AttributeName: id","          AttributeType: S","      KeySchema: ","        - AttributeName: user_id","          KeyType: HASH","        - AttributeName: id","          KeyType: RANGE","      ProvisionedThroughput: ","        ReadCapacityUnits: 5","        WriteCapacityUnits: 5","  GetOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/get-orders/","      Handler: app.getOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:GetItem","              - dynamodb:Query ","              - dynamodb:Scan","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\" ","  PostOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/post-orders/","      Handler: app.postOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:PutItem","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"  ","  GetSingleOrder:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/get-single-order/","      Handler: app.getOrderById","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:GetItem","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"","  UpdateOrder:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/update-order/","      Handler: app.updateOrder","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:UpdateItem","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"      ","  OrderApi:","    Type: AWS::Serverless::Api","    Properties:","      StageName: Dev","      Cors:","        AllowMethods: \"'POST, GET, UPDATE, DELETE'\"","        AllowHeaders: \"'X-Forwarded-For'\"","        AllowOrigin: \"'*'\"","        MaxAge: \"'600'\"","      DefinitionBody:","        'Fn::Transform':","          Name: 'AWS::Include'","          Parameters:","            Location: './api.yaml'","","  ApiGwExecutionRole: ","    Type: \"AWS::IAM::Role\"","    Properties: ","      AssumeRolePolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          - ","            Effect: \"Allow\"","            Principal: ","              Service: ","                - \"apigateway.amazonaws.com\"","                - \"lambda.amazonaws.com\"","            Action: ","              - \"sts:AssumeRole\"","      Path: \"/\"","","  ApiGwExecutionPolicy: ","    Type: \"AWS::IAM::Policy\"","    Properties: ","      PolicyName: \"apigw-execution-policy\"","      PolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          Action:","            - lambda:*","          Effect: Allow","          Resource:","            - !GetAtt GetOrders.Arn","            - !GetAtt PostOrders.Arn","            - !GetAtt GetSingleOrder.Arn","      Roles: ","        - Ref: \"ApiGwExecutionRole\"","","Outputs:","  DynamoDBTableName:","    Description: \"DynamoDB Table Name\"","    Value: !Ref OrderTable","  GetOrders:","    Description: \"GetOrders Lambda Function ARN\"","    Value: !GetAtt GetOrders.Arn","  OrderApiEndpoint:","    Description: \"API Gateway endpoint URL for Dev stage for Order Get function\"","    Value: !Sub \"https://${OrderApi}.execute-api.${AWS::Region}.amazonaws.com/Dev/orders/\"","  PostOrders:","    Description: \"PostOrders Lambda Function ARN\"","    Value: !GetAtt PostOrders.Arn","  GetSingleOrder:","    Description: \"GetSingleOrder Lambda Function ARN\"","    Value: !GetAtt GetSingleOrder.Arn","  UpdateOrder:","    Description: \"UpdateOrder Lambda Function ARN\"","    Value: !GetAtt UpdateOrder.Arn",""]}],[{"start":{"row":167,"column":40},"end":{"row":168,"column":0},"action":"insert","lines":["",""],"id":429},{"start":{"row":168,"column":0},"end":{"row":168,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":168,"column":12},"end":{"row":168,"column":37},"action":"insert","lines":["- !GetAtt UpdateOrder.Arn"],"id":430}],[{"start":{"row":0,"column":0},"end":{"row":191,"column":0},"action":"remove","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  order-app","","  Sample SAM Template for order-app","  ","Globals:","  Function:","    Timeout: 3","","Resources:","  OrderTable:","    Type: AWS::DynamoDB::Table","    Properties: ","      TableName: order-table","      AttributeDefinitions: ","        - AttributeName: user_id","          AttributeType: S","        - AttributeName: id","          AttributeType: S","      KeySchema: ","        - AttributeName: user_id","          KeyType: HASH","        - AttributeName: id","          KeyType: RANGE","      ProvisionedThroughput: ","        ReadCapacityUnits: 5","        WriteCapacityUnits: 5","  GetOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/get-orders/","      Handler: app.getOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:GetItem","              - dynamodb:Query ","              - dynamodb:Scan","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\" ","  PostOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/post-orders/","      Handler: app.postOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:PutItem","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"  ","  GetSingleOrder:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/get-single-order/","      Handler: app.getOrderById","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:GetItem","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"","  UpdateOrder:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/update-order/","      Handler: app.updateOrder","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:UpdateItem","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"      ","  OrderApi:","    Type: AWS::Serverless::Api","    Properties:","      StageName: Dev","      Cors:","        AllowMethods: \"'POST, GET, UPDATE, DELETE'\"","        AllowHeaders: \"'X-Forwarded-For'\"","        AllowOrigin: \"'*'\"","        MaxAge: \"'600'\"","      DefinitionBody:","        'Fn::Transform':","          Name: 'AWS::Include'","          Parameters:","            Location: './api.yaml'","","  ApiGwExecutionRole: ","    Type: \"AWS::IAM::Role\"","    Properties: ","      AssumeRolePolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          - ","            Effect: \"Allow\"","            Principal: ","              Service: ","                - \"apigateway.amazonaws.com\"","                - \"lambda.amazonaws.com\"","            Action: ","              - \"sts:AssumeRole\"","      Path: \"/\"","","  ApiGwExecutionPolicy: ","    Type: \"AWS::IAM::Policy\"","    Properties: ","      PolicyName: \"apigw-execution-policy\"","      PolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          Action:","            - lambda:*","          Effect: Allow","          Resource:","            - !GetAtt GetOrders.Arn","            - !GetAtt PostOrders.Arn","            - !GetAtt GetSingleOrder.Arn","            - !GetAtt UpdateOrder.Arn","      Roles: ","        - Ref: \"ApiGwExecutionRole\"","","Outputs:","  DynamoDBTableName:","    Description: \"DynamoDB Table Name\"","    Value: !Ref OrderTable","  GetOrders:","    Description: \"GetOrders Lambda Function ARN\"","    Value: !GetAtt GetOrders.Arn","  OrderApiEndpoint:","    Description: \"API Gateway endpoint URL for Dev stage for Order Get function\"","    Value: !Sub \"https://${OrderApi}.execute-api.${AWS::Region}.amazonaws.com/Dev/orders/\"","  PostOrders:","    Description: \"PostOrders Lambda Function ARN\"","    Value: !GetAtt PostOrders.Arn","  GetSingleOrder:","    Description: \"GetSingleOrder Lambda Function ARN\"","    Value: !GetAtt GetSingleOrder.Arn","  UpdateOrder:","    Description: \"UpdateOrder Lambda Function ARN\"","    Value: !GetAtt UpdateOrder.Arn",""],"id":431},{"start":{"row":0,"column":0},"end":{"row":219,"column":0},"action":"insert","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  order-app","","  Sample SAM Template for order-app","  ","Globals:","  Function:","    Timeout: 3","","Resources:","  OrderTable:","    Type: AWS::DynamoDB::Table","    Properties: ","      TableName: order-table","      AttributeDefinitions: ","        - AttributeName: user_id","          AttributeType: S","        - AttributeName: id","          AttributeType: S","      KeySchema: ","        - AttributeName: user_id","          KeyType: HASH","        - AttributeName: id","          KeyType: RANGE","      ProvisionedThroughput: ","        ReadCapacityUnits: 5","        WriteCapacityUnits: 5","  GetOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/get-orders/","      Handler: app.getOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:GetItem","              - dynamodb:Query ","              - dynamodb:Scan","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\" ","  PostOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/post-orders/","      Handler: app.postOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:PutItem","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"  ","  GetSingleOrder:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/get-single-order/","      Handler: app.getOrderById","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:GetItem","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"","  UpdateOrder:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/update-order/","      Handler: app.updateOrder","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:UpdateItem","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"      ","  DeleteOrder:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/delete-order/","      Handler: app.deleteOrder","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:DeleteItem","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"    ","","  OrderApi:","    Type: AWS::Serverless::Api","    Properties:","      StageName: Dev","      Cors:","        AllowMethods: \"'POST, GET, UPDATE, DELETE'\"","        AllowHeaders: \"'X-Forwarded-For'\"","        AllowOrigin: \"'*'\"","        MaxAge: \"'600'\"","      DefinitionBody:","        'Fn::Transform':","          Name: 'AWS::Include'","          Parameters:","            Location: './api.yaml'","","  ApiGwExecutionRole: ","    Type: \"AWS::IAM::Role\"","    Properties: ","      AssumeRolePolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          - ","            Effect: \"Allow\"","            Principal: ","              Service: ","                - \"apigateway.amazonaws.com\"","                - \"lambda.amazonaws.com\"","            Action: ","              - \"sts:AssumeRole\"","      Path: \"/\"","","  ApiGwExecutionPolicy: ","    Type: \"AWS::IAM::Policy\"","    Properties: ","      PolicyName: \"apigw-execution-policy\"","      PolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          Action:","            - lambda:*","          Effect: Allow","          Resource:","            - !GetAtt GetOrders.Arn","            - !GetAtt PostOrders.Arn","            - !GetAtt GetSingleOrder.Arn","            - !GetAtt UpdateOrder.Arn","      Roles: ","        - Ref: \"ApiGwExecutionRole\"","","Outputs:","  DynamoDBTableName:","    Description: \"DynamoDB Table Name\"","    Value: !Ref OrderTable","  GetOrders:","    Description: \"GetOrders Lambda Function ARN\"","    Value: !GetAtt GetOrders.Arn","  OrderApiEndpoint:","    Description: \"API Gateway endpoint URL for Dev stage for Order Get function\"","    Value: !Sub \"https://${OrderApi}.execute-api.${AWS::Region}.amazonaws.com/Dev/orders/\"","  PostOrders:","    Description: \"PostOrders Lambda Function ARN\"","    Value: !GetAtt PostOrders.Arn","  GetSingleOrder:","    Description: \"GetSingleOrder Lambda Function ARN\"","    Value: !GetAtt GetSingleOrder.Arn","  UpdateOrder:","    Description: \"UpdateOrder Lambda Function ARN\"","    Value: !GetAtt UpdateOrder.Arn","  DeleteOrder:","    Description: \"DeleteOrder Lambda Function ARN\"","    Value: !GetAtt DeleteOrder.Arn","",""]}],[{"start":{"row":192,"column":37},"end":{"row":193,"column":0},"action":"insert","lines":["",""],"id":432},{"start":{"row":193,"column":0},"end":{"row":193,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":193,"column":12},"end":{"row":193,"column":37},"action":"insert","lines":["- !GetAtt DeleteOrder.Arn"],"id":433}],[{"start":{"row":195,"column":35},"end":{"row":196,"column":0},"action":"insert","lines":["",""],"id":434},{"start":{"row":196,"column":0},"end":{"row":196,"column":8},"action":"insert","lines":["        "]},{"start":{"row":196,"column":8},"end":{"row":197,"column":0},"action":"insert","lines":["",""]},{"start":{"row":197,"column":0},"end":{"row":197,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":197,"column":6},"end":{"row":197,"column":8},"action":"remove","lines":["  "],"id":435},{"start":{"row":197,"column":4},"end":{"row":197,"column":6},"action":"remove","lines":["  "]},{"start":{"row":197,"column":2},"end":{"row":197,"column":4},"action":"remove","lines":["  "]}],[{"start":{"row":197,"column":2},"end":{"row":206,"column":0},"action":"insert","lines":["OrderQueue:","  Type: AWS::SQS::Queue","  Properties:","    RedrivePolicy:","      deadLetterTargetArn: !GetAtt OrderDLQueue.Arn","      maxReceiveCount: 5","","OrderDLQueue:","  Type: AWS::SQS::Queue",""],"id":436}],[{"start":{"row":198,"column":0},"end":{"row":198,"column":2},"action":"insert","lines":["  "],"id":437},{"start":{"row":199,"column":0},"end":{"row":199,"column":2},"action":"insert","lines":["  "]},{"start":{"row":200,"column":0},"end":{"row":200,"column":2},"action":"insert","lines":["  "]},{"start":{"row":201,"column":0},"end":{"row":201,"column":2},"action":"insert","lines":["  "]},{"start":{"row":202,"column":0},"end":{"row":202,"column":2},"action":"insert","lines":["  "]},{"start":{"row":203,"column":0},"end":{"row":203,"column":2},"action":"insert","lines":["  "]},{"start":{"row":204,"column":0},"end":{"row":204,"column":2},"action":"insert","lines":["  "]},{"start":{"row":205,"column":0},"end":{"row":205,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":229,"column":34},"end":{"row":230,"column":0},"action":"insert","lines":["",""],"id":438},{"start":{"row":230,"column":0},"end":{"row":230,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":230,"column":2},"end":{"row":230,"column":4},"action":"remove","lines":["  "],"id":439}],[{"start":{"row":230,"column":2},"end":{"row":236,"column":0},"action":"insert","lines":["OrderQueueUrl:","  Description: \"URL of order queue\"","  Value: !Ref OrderQueue","OrderDLQueueUrl:","  Description: \"URL of order dead-letter queue\"","  Value: !Ref OrderDLQueue",""],"id":440}],[{"start":{"row":231,"column":0},"end":{"row":231,"column":2},"action":"insert","lines":["  "],"id":441},{"start":{"row":232,"column":0},"end":{"row":232,"column":2},"action":"insert","lines":["  "]},{"start":{"row":233,"column":0},"end":{"row":233,"column":2},"action":"insert","lines":["  "]},{"start":{"row":234,"column":0},"end":{"row":234,"column":2},"action":"insert","lines":["  "]},{"start":{"row":235,"column":0},"end":{"row":235,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":59,"column":25},"end":{"row":60,"column":0},"action":"insert","lines":["",""],"id":442},{"start":{"row":60,"column":0},"end":{"row":60,"column":6},"action":"insert","lines":["      "]}],[{"start":{"row":60,"column":6},"end":{"row":66,"column":0},"action":"insert","lines":["Events:","  SQSEventSource:","    Type: SQS","    Properties:","      Queue: !GetAtt OrderQueue.Arn","      BatchSize: 10",""],"id":443}],[{"start":{"row":65,"column":19},"end":{"row":66,"column":0},"action":"remove","lines":["",""],"id":444}],[{"start":{"row":61,"column":0},"end":{"row":61,"column":2},"action":"insert","lines":["  "],"id":445},{"start":{"row":62,"column":0},"end":{"row":62,"column":2},"action":"insert","lines":["  "]},{"start":{"row":63,"column":0},"end":{"row":63,"column":2},"action":"insert","lines":["  "]},{"start":{"row":64,"column":0},"end":{"row":64,"column":2},"action":"insert","lines":["  "]},{"start":{"row":65,"column":0},"end":{"row":65,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":61,"column":0},"end":{"row":61,"column":2},"action":"insert","lines":["  "],"id":446},{"start":{"row":62,"column":0},"end":{"row":62,"column":2},"action":"insert","lines":["  "]},{"start":{"row":63,"column":0},"end":{"row":63,"column":2},"action":"insert","lines":["  "]},{"start":{"row":64,"column":0},"end":{"row":64,"column":2},"action":"insert","lines":["  "]},{"start":{"row":65,"column":0},"end":{"row":65,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":61,"column":0},"end":{"row":61,"column":2},"action":"insert","lines":["  "],"id":447},{"start":{"row":62,"column":0},"end":{"row":62,"column":2},"action":"insert","lines":["  "]},{"start":{"row":63,"column":0},"end":{"row":63,"column":2},"action":"insert","lines":["  "]},{"start":{"row":64,"column":0},"end":{"row":64,"column":2},"action":"insert","lines":["  "]},{"start":{"row":65,"column":0},"end":{"row":65,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":192,"column":22},"end":{"row":193,"column":0},"action":"insert","lines":["",""],"id":448},{"start":{"row":193,"column":0},"end":{"row":193,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":193,"column":12},"end":{"row":193,"column":29},"action":"insert","lines":["- sqs:SendMessage"],"id":449}],[{"start":{"row":197,"column":13},"end":{"row":197,"column":36},"action":"remove","lines":[" !GetAtt PostOrders.Arn"],"id":450},{"start":{"row":197,"column":12},"end":{"row":197,"column":13},"action":"remove","lines":["-"]}],[{"start":{"row":197,"column":12},"end":{"row":197,"column":36},"action":"insert","lines":["- !GetAtt OrderQueue.Arn"],"id":451}],[{"start":{"row":54,"column":2},"end":{"row":82,"column":21},"action":"remove","lines":["PostOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/post-orders/","      Handler: app.postOrders","      Runtime: nodejs14.x","      Events:","        SQSEventSource:","          Type: SQS","          Properties:","            Queue: !GetAtt OrderQueue.Arn","            BatchSize: 10","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:PutItem","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"  "],"id":453},{"start":{"row":54,"column":2},"end":{"row":82,"column":59},"action":"insert","lines":["PostOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/post-orders/","      Handler: app.postOrders","      Runtime: nodejs14.x","      Events:","        SQSEventSource:","          Type: SQS","          Properties:","            Queue: !GetAtt OrderQueue.Arn","            BatchSize: 10","      Environment:","        Variables:","          STATE_MACHINE_ARN: !Ref OrderManagementSFN","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"    ","          - Effect: Allow","            Action:","              - states:StartExecution","            Resource:","              - !Sub ","                - '${StateMachine}'","                - { StateMachine: !Ref OrderManagementSFN }"]}],[{"start":{"row":212,"column":25},"end":{"row":213,"column":0},"action":"insert","lines":["",""],"id":454},{"start":{"row":213,"column":0},"end":{"row":213,"column":4},"action":"insert","lines":["    "]},{"start":{"row":213,"column":4},"end":{"row":214,"column":0},"action":"insert","lines":["",""]},{"start":{"row":214,"column":0},"end":{"row":214,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":214,"column":2},"end":{"row":214,"column":4},"action":"remove","lines":["  "],"id":455}],[{"start":{"row":214,"column":0},"end":{"row":214,"column":2},"action":"remove","lines":["  "],"id":457}],[{"start":{"row":214,"column":0},"end":{"row":220,"column":0},"action":"insert","lines":["  ProcessPaymentFumction:","    Type: AWS::Serverless::Function","    Properties:","      CodeUri: src/order-management/functions/process-payment/","      Handler: app.processPayment","      Runtime: nodejs14.x",""],"id":458}],[{"start":{"row":214,"column":18},"end":{"row":214,"column":19},"action":"remove","lines":["m"],"id":459}],[{"start":{"row":214,"column":18},"end":{"row":214,"column":19},"action":"insert","lines":["n"],"id":460}],[{"start":{"row":219,"column":25},"end":{"row":220,"column":0},"action":"insert","lines":["",""],"id":461},{"start":{"row":220,"column":0},"end":{"row":220,"column":6},"action":"insert","lines":["      "]},{"start":{"row":220,"column":6},"end":{"row":221,"column":0},"action":"insert","lines":["",""]},{"start":{"row":221,"column":0},"end":{"row":221,"column":6},"action":"insert","lines":["      "]}],[{"start":{"row":221,"column":4},"end":{"row":221,"column":6},"action":"remove","lines":["  "],"id":462},{"start":{"row":221,"column":2},"end":{"row":221,"column":4},"action":"remove","lines":["  "]}],[{"start":{"row":221,"column":2},"end":{"row":226,"column":23},"action":"insert","lines":["SendOrderToRestaurantFunction:","  Type: AWS::Serverless::Function","  Properties:","    CodeUri: src/order-management/functions/sendordertorestaurant/","    Handler: app.sendOrderToRestaurant","    Runtime: nodejs14.x"],"id":463}],[{"start":{"row":222,"column":0},"end":{"row":222,"column":2},"action":"insert","lines":["  "],"id":464},{"start":{"row":223,"column":0},"end":{"row":223,"column":2},"action":"insert","lines":["  "]},{"start":{"row":224,"column":0},"end":{"row":224,"column":2},"action":"insert","lines":["  "]},{"start":{"row":225,"column":0},"end":{"row":225,"column":2},"action":"insert","lines":["  "]},{"start":{"row":226,"column":0},"end":{"row":226,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":226,"column":25},"end":{"row":227,"column":0},"action":"insert","lines":["",""],"id":465},{"start":{"row":227,"column":0},"end":{"row":227,"column":6},"action":"insert","lines":["      "]},{"start":{"row":227,"column":6},"end":{"row":228,"column":0},"action":"insert","lines":["",""]},{"start":{"row":228,"column":0},"end":{"row":228,"column":6},"action":"insert","lines":["      "]}],[{"start":{"row":228,"column":4},"end":{"row":228,"column":6},"action":"remove","lines":["  "],"id":466},{"start":{"row":228,"column":2},"end":{"row":228,"column":4},"action":"remove","lines":["  "]}],[{"start":{"row":228,"column":2},"end":{"row":270,"column":0},"action":"insert","lines":["  ManageStateFunction:","    Type: AWS::Serverless::Function","    Properties:","      CodeUri: src/order-management/functions/managestate/","      Handler: app.manageState","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","          SNS_TOPIC_ARN: !Ref OrderTopic","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:GetItem","              - dynamodb:Query ","              - dynamodb:Scan","              - dynamodb:PutItem","              - dynamodb:UpdateItem","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"    ","          - Effect: Allow","            Action:","              - SNS:Publish","            Resource:","              - \"*\"    ","  ","  OrderTopic:","    Type: AWS::SNS::Topic","    Properties: ","      Subscription: ","        - Endpoint: \"<YOUR-EMAIL-ADDRESS(i.e.test@gmail.com)>\"","          Protocol: \"email\"","      TopicName: \"order-topic\"","",""],"id":467}],[{"start":{"row":228,"column":2},"end":{"row":228,"column":4},"action":"remove","lines":["  "],"id":468}],[{"start":{"row":266,"column":21},"end":{"row":266,"column":61},"action":"remove","lines":["<YOUR-EMAIL-ADDRESS(i.e.test@gmail.com)>"],"id":469},{"start":{"row":266,"column":21},"end":{"row":266,"column":22},"action":"insert","lines":["m"]},{"start":{"row":266,"column":22},"end":{"row":266,"column":23},"action":"insert","lines":["a"]},{"start":{"row":266,"column":23},"end":{"row":266,"column":24},"action":"insert","lines":["l"]},{"start":{"row":266,"column":24},"end":{"row":266,"column":25},"action":"insert","lines":["c"]},{"start":{"row":266,"column":25},"end":{"row":266,"column":26},"action":"insert","lines":["h"]},{"start":{"row":266,"column":26},"end":{"row":266,"column":27},"action":"insert","lines":["i"]},{"start":{"row":266,"column":27},"end":{"row":266,"column":28},"action":"insert","lines":["e"]},{"start":{"row":266,"column":28},"end":{"row":266,"column":29},"action":"insert","lines":["l"]},{"start":{"row":266,"column":29},"end":{"row":266,"column":30},"action":"insert","lines":["u"]}],[{"start":{"row":266,"column":30},"end":{"row":266,"column":31},"action":"insert","lines":["r"],"id":470},{"start":{"row":266,"column":31},"end":{"row":266,"column":32},"action":"insert","lines":["i"]},{"start":{"row":266,"column":32},"end":{"row":266,"column":33},"action":"insert","lines":["a"]},{"start":{"row":266,"column":33},"end":{"row":266,"column":34},"action":"insert","lines":["s"]},{"start":{"row":266,"column":34},"end":{"row":266,"column":35},"action":"insert","lines":["b"]},{"start":{"row":266,"column":35},"end":{"row":266,"column":36},"action":"insert","lines":["u"]},{"start":{"row":266,"column":36},"end":{"row":266,"column":37},"action":"insert","lines":["s"]},{"start":{"row":266,"column":37},"end":{"row":266,"column":38},"action":"insert","lines":["i"]},{"start":{"row":266,"column":38},"end":{"row":266,"column":39},"action":"insert","lines":["n"]},{"start":{"row":266,"column":39},"end":{"row":266,"column":40},"action":"insert","lines":["e"]},{"start":{"row":266,"column":40},"end":{"row":266,"column":41},"action":"insert","lines":["s"]},{"start":{"row":266,"column":41},"end":{"row":266,"column":42},"action":"insert","lines":["s"]}],[{"start":{"row":266,"column":42},"end":{"row":266,"column":43},"action":"insert","lines":["@"],"id":471},{"start":{"row":266,"column":43},"end":{"row":266,"column":44},"action":"insert","lines":["g"]},{"start":{"row":266,"column":44},"end":{"row":266,"column":45},"action":"insert","lines":["m"]},{"start":{"row":266,"column":45},"end":{"row":266,"column":46},"action":"insert","lines":["a"]},{"start":{"row":266,"column":46},"end":{"row":266,"column":47},"action":"insert","lines":["i"]},{"start":{"row":266,"column":47},"end":{"row":266,"column":48},"action":"insert","lines":["l"]},{"start":{"row":266,"column":48},"end":{"row":266,"column":49},"action":"insert","lines":["."]},{"start":{"row":266,"column":49},"end":{"row":266,"column":50},"action":"insert","lines":["c"]},{"start":{"row":266,"column":50},"end":{"row":266,"column":51},"action":"insert","lines":["o"]},{"start":{"row":266,"column":51},"end":{"row":266,"column":52},"action":"insert","lines":["m"]}],[{"start":{"row":270,"column":0},"end":{"row":285,"column":0},"action":"insert","lines":["  OrderManagementSFN:","    Type: AWS::Serverless::StateMachine","    Properties:","      DefinitionUri: src/order-management/statemachine/process-order.asl.json","      DefinitionSubstitutions:","        ManageStateArn: !GetAtt ManageStateFunction.Arn","        ProcessPaymentArn: !GetAtt ProcessPaymentFumction.Arn","        SendOrderToRestaurantArn: !GetAtt SendOrderToRestaurantFunction.Arn","      Policies: ","        - LambdaInvokePolicy:","            FunctionName: !Ref ManageStateFunction","        - LambdaInvokePolicy:","            FunctionName: !Ref ProcessPaymentFumction","        - LambdaInvokePolicy:","            FunctionName: !Ref SendOrderToRestaurantFunction",""],"id":472}],[{"start":{"row":282,"column":47},"end":{"row":282,"column":48},"action":"remove","lines":["m"],"id":473}],[{"start":{"row":282,"column":47},"end":{"row":282,"column":48},"action":"insert","lines":["n"],"id":474}],[{"start":{"row":282,"column":31},"end":{"row":282,"column":53},"action":"remove","lines":["ProcessPaymentFunction"],"id":475},{"start":{"row":282,"column":31},"end":{"row":282,"column":53},"action":"insert","lines":["ProcessPaymentFunction"]}],[{"start":{"row":276,"column":51},"end":{"row":276,"column":52},"action":"remove","lines":["m"],"id":476}],[{"start":{"row":276,"column":51},"end":{"row":276,"column":52},"action":"insert","lines":["n"],"id":477}]]},"ace":{"folds":[],"scrolltop":3670.7999999999975,"scrollleft":0,"selection":{"start":{"row":275,"column":54},"end":{"row":275,"column":54},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":253,"state":"start","mode":"ace/mode/yaml"}},"timestamp":1692454773691,"hash":"3c75aff0a7d4940044c561cd5486b64e33ffe201"}